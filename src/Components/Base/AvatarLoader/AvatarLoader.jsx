/* eslint-disable max-len */
import './AvatarLoader.css';
import { useRef } from 'react';
import { useDispatch } from 'react-redux';
import { avatarIsValid, resizeImage } from '../../../utils';
import { showNotice, updateUser } from '../../../Store/actionCreators';

export default function AvatarLoader({ userId, avatarUrl }) {
  const inputRef = useRef(null);
  const dispatch = useDispatch();

  const onChangeAvatar = (e) => {
    const img = document.createElement('img');
    img.src = URL.createObjectURL(e.target.files[0]);
    img.onload = () => {
      const { message, status } = avatarIsValid(img);
      if (status) {
        resizeImage(img, (smallFile) => {
          img.remove();
          updateAvatar(smallFile);
        });
      } else dispatch(showNotice(message, status));
    };
  };

  const updateAvatar = async (file) => {
    const formData = new FormData();
    formData.append('avatar', file, 'avatar.jpg');
    formData.append('id', userId);
    dispatch(updateUser(
      formData,
      '–ú—ã –æ–±–Ω–æ–≤–∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –£ –í–∞—Å –∏–∑—É–º–∏—Ç–µ–ª—å–Ω–æ–µ —Ñ–æ—Ç–æüòä',
      '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö, –Ω–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞–¥ –µ–µ —Ä–µ—à–µ–Ω–∏–µ–º',
    ));
  };

  const onClickContainer = (e) => {
    inputRef.current.dispatchEvent(new MouseEvent('click'));
  };

  return (
    <div className="AvatarLoader AvatarLoader--notInstaled" onClick={onClickContainer} style={{ backgroundImage: `url(${avatarUrl})` }}>
      <input className="AvatarLoader__input" ref={inputRef} onChange={onChangeAvatar} name="avatar" type="file" accept="image/*"/>
      <span className="AvatarLoader__text">
        {!avatarUrl && '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –í–∞—à–µ —Ä–µ–∞–ª—å–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é'}
        {avatarUrl && '–í—ã –º–æ–∂–µ—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è'}
      </span>
    </div>
  );
}
